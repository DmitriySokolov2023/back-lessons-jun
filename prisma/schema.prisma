// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  name     String?
  password String
  images   String[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  exerciseLogs ExerciseLog[]
  workoutLogs  WorkoutLog[]
}

model Exercise {
  id Int @id @default(autoincrement())

  name  String
  times Int
  image String

  createdAt     DateTime     @default(now()) @map("created_at")
  updatedAt     DateTime     @updatedAt @map("updated_at")
  worcout       Workout[]
  exerciseLog   ExerciseLog? @relation(fields: [exerciseLogId], references: [id])
  exerciseLogId Int?         @map("exercise_log_id")
}

model Workout {
  id          Int          @id @default(autoincrement())
  name        String
  exercises   Exercise[]
  workoutLogs WorkoutLog[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

// model test {
//   id        Int        @id @default(autoincrement())
//   createdAt DateTime @default(now()) @map("created_at")
//   updatedAt DateTime @updatedAt @map("updated_at")
// }

model WorkoutLog {
  id Int @id @default(autoincrement())

  isComplited  Boolean       @map("is_complited")
  exerciseLogs ExerciseLog[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  Workout   Workout? @relation(fields: [workoutId], references: [id])
  workoutId Int?

  @@map("Workout_log")
}

model ExerciseLog {
  id Int @id @default(autoincrement())

  isCompleted Boolean        @default(false) @map("is_completed")
  times       ExerciseTime[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  User         User?       @relation(fields: [userId], references: [id])
  userId       Int?
  Exercise     Exercise[]
  workoutLog   WorkoutLog? @relation(fields: [workoutLogId], references: [id])
  workoutLogId Int?        @map("workout_log_id")

  @@map("Exercise_log")
}

model ExerciseTime {
  id Int @id @default(autoincrement())

  weight Int
  repeat Int

  createdAt     DateTime     @default(now()) @map("created_at")
  updatedAt     DateTime     @updatedAt @map("updated_at")
  ExerciseLog   ExerciseLog? @relation(fields: [exerciseLogId], references: [id])
  exerciseLogId Int?         @map("exercise_log_id")

  @@map("Exercise_time")
}
